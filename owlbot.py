# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""This script is used to synthesize generated parts of this library."""

import json

import synthtool as s
from synthtool import gcp
from synthtool.languages import python

# ----------------------------------------------------------------------------
# Copy the generated client from the owl-bot staging directory
# ----------------------------------------------------------------------------

# Load the default version defined in .repo-metadata.json.
default_version = json.load(open(".repo-metadata.json", "rt")).get("default_version")

for library in s.get_staging_dirs(default_version):
    s.move(
        [library],
        excludes=[
            "**/gapic_version.py",
            "docs/**/*",
            "scripts/fixup*.py",
            "setup.py",
            "noxfile.py",
            "README.rst",
            # Exclude autogenerated default import `google.cloud.storage`
            "google/cloud/storage/*",
            # Exclude autogenerated constraints files for Python 3.7/3.9
            "testing/constraints-3.7.txt",
            "testing/constraints-3.9.txt",
        ],
    )
s.remove_staging_dirs()

common = gcp.CommonTemplates()

# ----------------------------------------------------------------------------
# Add templated files
# ----------------------------------------------------------------------------
templated_files = common.py_library(
    cov_level=100,
    split_system_tests=True,
    intersphinx_dependencies={
        # python-requests url temporary change related to
        # https://github.com/psf/requests/issues/6140#issuecomment-1135071992
        "requests": "https://requests.readthedocs.io/en/stable/"
    },
)

s.move(
    templated_files,
    excludes=[
        "docs/multiprocessing.rst",
        "noxfile.py",
        "CONTRIBUTING.rst",
        "README.rst",
        ".kokoro/continuous/continuous.cfg",
        ".kokoro/presubmit/system-3.8.cfg",
        ".kokoro/presubmit/prerelease-deps.cfg",
        ".kokoro/continuous/prerelease-deps.cfg",
        ".github/blunderbuss.yml", # blunderbuss assignment to python squad
        ".github/workflows", # exclude gh actions as credentials are needed for tests
        ".github/release-please.yml", # special support for a python2 branch in this repo
    ],
)

s.replace(
    ".kokoro/build.sh",
    "export PYTHONUNBUFFERED=1",
    """export PYTHONUNBUFFERED=1

# Export variable to override api endpoint
export API_ENDPOINT_OVERRIDE

# Export variable to override api endpoint version
export API_VERSION_OVERRIDE

# Export dual region locations
export DUAL_REGION_LOC_1
export DUAL_REGION_LOC_2

# Setup universe domain testing needed environment variables.
export TEST_UNIVERSE_DOMAIN_CREDENTIAL=$(realpath ${KOKORO_GFILE_DIR}/secret_manager/client-library-test-universe-domain-credential)
export TEST_UNIVERSE_DOMAIN=$(gcloud secrets versions access latest --project cloud-devrel-kokoro-resources --secret=client-library-test-universe-domain)
export TEST_UNIVERSE_PROJECT_ID=$(gcloud secrets versions access latest --project cloud-devrel-kokoro-resources --secret=client-library-test-universe-project-id)
export TEST_UNIVERSE_LOCATION=$(gcloud secrets versions access latest --project cloud-devrel-kokoro-resources --secret=client-library-test-universe-storage-location)

""")

s.replace(
    ".coveragerc",
    "omit =",
    """omit =
  .nox/*""")

python.py_samples(skip_readmes=True)

# Use a python runtime which is available in the owlbot post processor here
# https://github.com/googleapis/synthtool/blob/master/docker/owlbot/python/Dockerfile
s.shell.run(["nox", "-s", "blacken-3.10"], hide_output=False)
